/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.stnetix.ariaddna.restapiserver.api;

import com.stnetix.ariaddna.restapiserver.model.Cloud;
import com.stnetix.ariaddna.restapiserver.model.ErrorModel;
import java.util.UUID;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-07-24T10:27:06.657+03:00")

@Api(value = "clouds", description = "the clouds API")
public interface CloudsApi {

    @ApiOperation(value = "", notes = "Allows one to add an external cloud account to an existing ariADDna's user. The User MUST be already registered at the cloud service to be added.", response = Cloud.class, tags={ "Ariaddna", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "New cloud account was added successfully.", response = Cloud.class),
        @ApiResponse(code = 409, message = "This cloud account already exists.", response = ErrorModel.class),
        @ApiResponse(code = 200, message = "Unexpected error.", response = ErrorModel.class) })
    
    @RequestMapping(value = "/clouds",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Cloud> addExternalCloudAccount(@ApiParam(value = "A required information about an external cloud service that a user wants to include to his ariADDna."  )  @Valid @RequestBody Cloud cloud);


    @ApiOperation(value = "", notes = "Allows to delete user's external cloud account.", response = UUID.class, tags={ "Ariaddna", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "The cloud account was deleted.", response = UUID.class),
        @ApiResponse(code = 404, message = "The specified cloud account was not found.", response = Void.class) })
    
    @RequestMapping(value = "/clouds/{cloudUuid}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<UUID> deleteExternalCloudAccount(@ApiParam(value = "An external cloud identifier which user has inside his profile. Allows to delete external cloud profile.",required=true ) @PathVariable("cloudUuid") UUID cloudUuid);

}
