/*
 * Copyright (c) 2018 stnetix.com. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License.  You may obtain a copy of
 * the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, without warranties or
 * conditions of any kind, EITHER EXPRESS OR IMPLIED.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

package com.stnetix.ariaddna.restapiserver.api;

import java.util.UUID;

import javax.validation.Valid;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.stnetix.ariaddna.restapiserver.model.Cloud;
import com.stnetix.ariaddna.restapiserver.model.ErrorModel;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-07-24T10:27:06.657+03:00")

@Api(value = "clouds", description = "the clouds API")
public interface CloudsApi {

    @ApiOperation(value = "", notes = "Allows one to add an external cloud account to an existing ariADDna's user. The User MUST be already registered at the cloud service to be added.", response = Cloud.class, tags = {
            "Ariaddna", })
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "New cloud account was added successfully.", response = Cloud.class),
            @ApiResponse(code = 409, message = "This cloud account already exists.", response = ErrorModel.class),
            @ApiResponse(code = 200, message = "Unexpected error.", response = ErrorModel.class) })

    @RequestMapping(value = "/clouds",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<Cloud> addExternalCloudAccount(
            @ApiParam(value = "A required information about an external cloud service that a user wants to include to his ariADDna.") @Valid @RequestBody Cloud cloud);

    @ApiOperation(value = "", notes = "Allows to delete user's external cloud account.", response = UUID.class, tags = {
            "Ariaddna", })
    @ApiResponses(value = {
            @ApiResponse(code = 204, message = "The cloud account was deleted.", response = UUID.class),
            @ApiResponse(code = 404, message = "The specified cloud account was not found.", response = Void.class) })

    @RequestMapping(value = "/clouds/{cloudUuid}",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.DELETE)
    ResponseEntity<UUID> deleteExternalCloudAccount(
            @ApiParam(value = "An external cloud identifier which user has inside his profile. Allows to delete external cloud profile.", required = true) @PathVariable("cloudUuid") UUID cloudUuid);

}
